/square_rect(main)/
#include <iostream>
#include <stdexcept>
#include "pie_2D.h" 
#include "cylinder_3D.h" 
using namespace std;

int main(void)
{
    double length;
    double width;
    double height; 

// 視窗輸出配置
cout << "Emter the length and width for square:" << endl;

cout << " Length=";

cin >> length;

cout << " Width=";

cin >> width;

square_2d userenter(length, width);

cout <<"-------------------------------------------------" << endl;

cout << "Emter the height for rect:" << endl;

cout << " Height=";

cin >> height;

rect_3d userenter(length, width, height);

cout << "-------------------------------------------------" << endl;

cout << "The result is:\n\n";

cout << "  The result of square:\n";

cout << "     Length：" << userenter.getlength() << " cm" << " | Width："

<< userenter.getwidth() << " cm" << "\n     The area is "

<< userenter.compute_area() << " cm2\n" << endl;

cout << "  The result of rect:\n";

cout << "     Length：" << userenter2.getlength() << " cm" << " | Width："

<< userenter2.getwidth() << " cm" << " | Height：" << userenter2.getheight()

<< " cm" << "\n     The volume is " << userenter2.compute_volume() << " cm3 | The surface is " << userenter2.compute_surface() << " cm2\n" << endl;

system("pause");

}


/pie_2D.h/
// Fig. 11.11: BasePlusCommissionEmployee.cpp
// Class BasePlusCommissionEmployee member-function definitions.
#include <iostream>
#include <stdexcept>
#include"pie_2D.h"
using namespace std;

// constructor
square_2d::square_2d(const double l, const double w)
{
    setlength(l); 
    setwidth(w);
} 

void square_2d::setlength(const double l)
{
    length = l;  
} 

void square_2d::setwidth(const double w) 
{
    width = w;
} 

double square_2d::getlength()
{
    return length;
} 

double square_2d::getwidth()
{
    return width;
}

//面積計算：長*寬
double square_2d::compute_area() const
{
    return length * width;
}



/pie_2D.cpp/
#pragma once
// Fig. 11.10: BasePlusCommissionEmployee.h
// BasePlusCommissionEmployee class derived from class 
// CommissionEmployee.
#ifndef square2d_H
#define square2d_H
using namespace std;

//square_2d的類別(包含6個成員函數與2個資料成員)

class pie_2D
{
public:
    pie_2D(double = 0, double = 0); //建構子

    void setradius(const double); // 設定半徑

    void sepi(const double); // 設定圓周率

    double getradius(); // 取得半徑

    double getpi(); // 取得圓周率

    double compute_area() const; //計算面積

    double length(); // 長

    double width(); // 寬
}; 

#endif



/cylinder_3D.cpp/
// Fig. 11.5: CommissionEmployee.cpp
// Class CommissionEmployee member-function definitions.
#include <iostream>
#include <stdexcept>
#include "cylinder_3D.h" // CommissionEmployee class definition
using namespace std;

rect_3d::rect_3d(double l, double w, double h)
{
    setlength(l); 
    setwidth(w); 
    setheight(h);
} 

void rect_3d::setheight(const double h)
{
    height = h; 
} 

double rect_3d::getheight()
{
    return height;
}

//體積計算：長*寬*高

double rect_3d::compute_volume() const
{
    return length* width* height;
} 

//表面積計算：(長*寬+寬*高+長*高)*2
double rect_3d::compute_surface() const
{
    return (length * width * + width * length + length * height)*2;
}



/cylinder_3D.h/
#pragma once
// Fig. 11.4: CommissionEmployee.h
// CommissionEmployee class definition represents a commission employee.
#ifndef square3d_H
#define square3d_H
#include"pie_2D.h"
using namespace std;

//繼承square_2d類別的rect_3d類別(包含5個成員函數與1個資料成員 + square_2d內的函數與資料成員)

class rect_3d :public square_2d
{
public:
    rect_3d(double = 0, double = 0, double = 0); //建構子

    void setheight(const double); //設定高度

    double getheight(); //取得高度

    double compute_volume () const; //計算體積

    double compute_surface() const; //計算表面積

    double height; //高
}; 
#endif
