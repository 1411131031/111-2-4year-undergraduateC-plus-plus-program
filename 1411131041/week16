main
#include<iostream>

#include<stdexcept>

#include"pie_2D.h"

#include"cylinder_3D.h"

using namespace std;

int main(void) {

    double length;

   

    double height;

    //視窗輸出配置

    cout << "Enter the R ：" << endl;

    cout << "  R=";

    cin >> length;



    

    pie_2D userenter(length);

    cout << "-------------------------------------------------" << endl;



    cout << "Enter the height:" << endl;

    cout << "  Height=";

    cin >> height;

    cylinder_3D userenter2(length, height);

    cout << "-------------------------------------------------" << endl;

    cout << "The result is:\n\n";

    cout << "  The result of square:\n";

    cout << "     Length：" << userenter.getlength() << " cm" << "\n     The area is "

        << userenter.compute_area() << " cm2\n" << endl;

    cout << "  The result of rect:\n";

    cout << "     Length：" << userenter2.getlength() << " cm" << " | Height：" << userenter2.getheight()

        << " cm" << "\n     The volume is " << userenter2.compute_volume() << " cm3 | The surface is " << userenter2.compute_surface() << " cm2\n" << endl;



    system("pause");

}

-----------------------------
cylinder_3D.cpp

#include<iostream>

#include<stdexcept>

#include"cylinder_3D.h"

using namespace std;

cylinder_3D::cylinder_3D(double r, double h)

{

    setlength(r);

    

    setheight(h);

}

void cylinder_3D::setheight(const double h) {

    height = h;

}

double cylinder_3D::getheight() {

    return height;

}

//體積計算：長*寬*高

double cylinder_3D::compute_volume() const {

    return length * length * height *3.14;

}

//表面積計算：(長*寬+寬*高+長*高)*2

double cylinder_3D::compute_surface() const {

    return length * 2*3.14* height + length* length*3.14*2;

}
-----------------------------
cylinder_3D.h

#ifndef square3d_H

#define square3d_H

#include"pie_2D.h"

using namespace std;

/*繼承類別的宣告方法為「衍生類別：基礎類別」*/

//繼承square_2d類別的rect_3d類別(包含5個成員函數與1個資料成員 + square_2d內的函數與資料成員)

class cylinder_3D :public pie_2D

{

public:

    cylinder_3D(double = 0, double = 0);            //建構子

    void setheight(const double);                           //設定高度

    double getheight();                                     //取得高度   

    double compute_volume() const;                          //計算體積

    double compute_surface() const;                         //計算表面積

    double height;                                          //高

};

#endif
--------------------------------
pie_2D.cpp

#include<iostream>

#include<stdexcept>

#include"pie_2D.h"

using namespace std;

pie_2D::pie_2D(const double r)

{

    setlength(r);

    

}

void pie_2D::setlength(const double r) {

    length = r;

}



double pie_2D::getlength() {

    return length;

}



//面積計算：長*寬

double pie_2D::compute_area() const {

    return length * length *3.14;

}
--------------------------------------------------------------
pie_2D.h

#ifndef square2d_H

#define square2d_H

using namespace std;

//square_2d的類別(包含6個成員函數與2個資料成員)

class pie_2D {

public:

    pie_2D(double = 0);           //建構子

    void setlength(const double);           //設定長度

    

    double getlength();                     //取得長度   

    

    double compute_area() const;            //計算面積

    double length;                          //長

   

};

#endif
