//建立兩個類別pie_2D與cylinder_3D，分別為基本類別與衍生類別(也就是cylinder_3D繼承於pie_2D)，輸入半徑(或直徑)、高，分別印出圓餅面積與圓柱體的體積與表面積。


#include<iostream>

#include<stdexcept>

#include"pie_2D.h"

#include"cylinder_3D.h"

using namespace std;

int main(void) {

    double radius;
    double height;

    cout << "Enter the radius for pie：" << endl;

    cout << "  radius =";

    cin >> radius;

    pie_2D userenter(radius);

    cout << "-------------------------------------------------" << endl;



    cout << "Enter the height for pie:" << endl;

    cout << "  Height =";

    cin >> height;

    cylinder_3D userenter2(radius, height);

    cout << "-------------------------------------------------" << endl;

    cout << "The result is:\n\n";

    cout << "  The result of square:\n";

    cout << "     radius：" << userenter.getradius() << " cm" "\n  The area is"  << "\n     The area is "

        << userenter.compute_area() << " cm2\n" << endl;

    cout << "  The result of rect:\n";

    cout << "     radius：" << userenter2.getradius() << " cm" << " | Height：" << userenter2.getheight()

        << " cm" << "\n     The volume is " << userenter2.compute_volume() << " cm3 | The surface is " << userenter2.compute_surface() << " cm2\n" << endl;



    system("pause");

}

#include<iostream>

#include<stdexcept>

#include"pie_2D.h"

using namespace std;

pie_2D::pie_2D(const double r)

{

    setradius(r);


}

void pie_2D::setradius(const double r) {

    radius = r;

}

double pie_2D::getradius() {

    return radius;

}


double pie_2D::compute_area() const {

    return radius * radius * 3.14;

}

#ifndef square2d_H

#define square2d_H

using namespace std;

//square_2d的類別(包含6個成員函數與2個資料成員)

class pie_2D{

public:

    pie_2D(double = 0);           //建構子

    void setradius(const double);           //設定半徑

    double getradius();                     //取得半徑   

    double compute_area() const;            //計算面積

    double radius;                          

};

#endif


#include<iostream>

#include<stdexcept>

#include"cylinder_3D.h"

using namespace std;

cylinder_3D::cylinder_3D(double r,double h)

{

    setradius(r);
    setheight(h);

}

void cylinder_3D::setheight(const double h) {

    height = h;

}

double cylinder_3D::getheight() {

    return height;

}

//體積計算：長*寬*高

double cylinder_3D::compute_volume() const {

    return radius * radius * 3.14 * height;

}

//表面積計算：(長*寬+寬*高+長*高)*2

double cylinder_3D::compute_surface() const {

    return (radius*radius*3.14*2)+height*radius * 2*3.14;

}

#ifndef square3d_H

#define square3d_H

#include"pie_2D.h"

using namespace std;

class cylinder_3D :public pie_2D

{

public:

    cylinder_3D(double = 0, double = 0);            //建構子

    void setheight(const double);                           //設定高度

    double getheight();                                     //取得高度   

    double compute_volume() const;                          //計算體積

    double compute_surface() const;                         //計算表面積

    double height;                                          //高

};

#endif
